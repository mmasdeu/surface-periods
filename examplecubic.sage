load('padicperiods.sage')

# # Below are precomputed values
T = Matrix(ZZ,2,2,[0, -5, -2, -1])
a = 4*7 + 2*7^2 + 5*7^3 + 3*7^4 + 3*7^5 + 4*7^6 + 2*7^7 + 3*7^8 + 6*7^9 + 2*7^10 + 4*7^11 + 3*7^13 + 5*7^14 + 4*7^15 + 3*7^16 + 3*7^17 + 2*7^18 + 2*7^19 + 6*7^20 + 3*7^21 + 7^22 + 2*7^23 + 5*7^24 + 4*7^25 + 4*7^26 + 7^28 + 6*7^29 + 6*7^30 + 7^31 + 5*7^32 + 6*7^33 + 3*7^35 + 5*7^36 + 6*7^37 + 6*7^38 + 3*7^39 + 7^40 + 3*7^41 + 4*7^42 + 2*7^43 + 3*7^44 + 2*7^45 + 2*7^46 + 2*7^47 + 7^48 + 7^49 + 5*7^50 + 2*7^51 + 6*7^52 + 5*7^53 + 7^54 + 3*7^55 + 4*7^57 + 7^58 + 6*7^59 + 2*7^60 + 5*7^62 + 3*7^63 + 4*7^64 + 3*7^65 + 4*7^66 + 5*7^68 + 2*7^69 + 5*7^70 + 5*7^71 + 7^72 + 4*7^73 + 7^74 + 6*7^75 + 4*7^76 + 2*7^77 + 5*7^78 + 7^79 + 4*7^80 + 6*7^81 + 2*7^82 + 4*7^83 + 7^84 + 3*7^85 + 5*7^86 + 4*7^87 + 4*7^89 + 6*7^90 + 4*7^91 + 6*7^92 + 7^93 + 4*7^94 + 3*7^95 + 4*7^96 + 7^99 + 5*7^101 + 6*7^102 + 4*7^104 + 2*7^105 + 7^106 + 5*7^107 + 3*7^108 + 6*7^109 + 7^110 + 6*7^111 + 6*7^112 + 4*7^113 + 6*7^114 + 5*7^115 + 2*7^116 + 2*7^118 + 5*7^119 + 6*7^120 + 5*7^123 + 6*7^124 + 3*7^125 + 5*7^127 + 4*7^128 + 3*7^131 + 5*7^132 + 5*7^133 + 5*7^134 + 4*7^135 + 5*7^137 + 4*7^138 + 6*7^139 + 5*7^140 + 2*7^141 + 3*7^143 + 2*7^144 + 5*7^145 + 2*7^146 + 5*7^147 + 7^148 + 2*7^149 + 7^150 + 4*7^151 + 4*7^152 + 3*7^154 + 3*7^155 + 7^156 + 2*7^157 + 5*7^158 + 3*7^159 + 2*7^160 + 2*7^161 + 4*7^162 + 4*7^163 + 3*7^164 + 6*7^167 + 3*7^168 + 2*7^169 + 4*7^171 + 7^172 + 7^173 + 5*7^174 + 4*7^175 + 2*7^176 + 6*7^177 + 7^178 + 4*7^179 + 6*7^180 + 6*7^181 + 5*7^182 + 4*7^184 + 6*7^185 + 2*7^186 + 3*7^188 + 4*7^189 + 4*7^190 + 5*7^191 + 7^192 + 3*7^193 + 3*7^195 + 6*7^196 + 3*7^197 + 6*7^200 + 4*7^201 + 5*7^202 + 2*7^203 + 2*7^204 + 6*7^205 + 7^206 + 7^207 + 4*7^208 + 7^209 + 5*7^210 + 5*7^211 + 7^212 + 2*7^214 + 7^215 + 4*7^216 + 2*7^217 + 4*7^218 + 6*7^219 + 6*7^220 + 3*7^223 + 2*7^224 + 6*7^225 + 6*7^226 + 6*7^227 + 7^228 + 6*7^229 + 5*7^230 + 2*7^231 + 6*7^232 + 7^233 + 7^234 + 3*7^235 + 6*7^236 + 5*7^237 + 2*7^238 + 2*7^239 + 7^240 + 7^241 + 5*7^242 + 7^243 + 7^244 + 4*7^245 + 5*7^246 + 6*7^247 + 5*7^248 + 6*7^249 + 3*7^250 + 6*7^251 + 2*7^252 + 3*7^253 + 2*7^254 + 5*7^255 + 5*7^256 + 4*7^257 + 2*7^258 + 2*7^259 + 4*7^260 + 5*7^261 + 6*7^262 + 6*7^263 + 4*7^264 + 7^265 + 3*7^266 + 7^267 + 4*7^268 + 6*7^269 + 6*7^270 + 7^271 + 3*7^272 + 3*7^273 + 6*7^274 + 4*7^275 + 5*7^276 + 3*7^277 + 2*7^278 + 7^279 + 3*7^281 + 4*7^282 + 3*7^283 + 4*7^284 + 4*7^285 + 4*7^286 + 2*7^287 + 2*7^288 + 7^289 + 7^291 + 3*7^292 + 7^293 + 4*7^294 + 6*7^295 + 5*7^296 + 7^297 + 6*7^298 + 5*7^299 + O(7^300)
b = 7^2 + 6*7^4 + 2*7^5 + 2*7^6 + 6*7^7 + 5*7^8 + 2*7^9 + 6*7^10 + 3*7^11 + 2*7^12 + 3*7^13 + 2*7^14 + 2*7^15 + 5*7^16 + 2*7^18 + 5*7^19 + 5*7^20 + 5*7^21 + 7^22 + 7^24 + 2*7^25 + 3*7^26 + 6*7^27 + 7^28 + 7^29 + 5*7^30 + 3*7^32 + 6*7^33 + 6*7^34 + 7^35 + 4*7^36 + 5*7^37 + 6*7^38 + 5*7^39 + 2*7^40 + 6*7^41 + 2*7^42 + 6*7^45 + 2*7^46 + 2*7^47 + 2*7^48 + 5*7^49 + 5*7^50 + 3*7^51 + 2*7^52 + 6*7^53 + 2*7^54 + 5*7^55 + 3*7^56 + 5*7^57 + 5*7^58 + 5*7^59 + 5*7^60 + 5*7^61 + 6*7^62 + 6*7^63 + 4*7^64 + 2*7^65 + 7^66 + 4*7^67 + 4*7^68 + 2*7^69 + 6*7^70 + 7^71 + 6*7^72 + 6*7^73 + 7^75 + 2*7^76 + 6*7^77 + 3*7^78 + 2*7^79 + 7^82 + 5*7^83 + 5*7^84 + 6*7^85 + 2*7^86 + 2*7^87 + 3*7^88 + 4*7^89 + 3*7^90 + 3*7^92 + 7^93 + 2*7^94 + 4*7^95 + 5*7^96 + 6*7^97 + 7^98 + 4*7^99 + 6*7^100 + 6*7^101 + 3*7^103 + 5*7^104 + 5*7^105 + 5*7^106 + 2*7^107 + 3*7^109 + 5*7^111 + 4*7^112 + 4*7^113 + 4*7^115 + 7^116 + 6*7^117 + 2*7^118 + 2*7^120 + 5*7^122 + 2*7^123 + 7^124 + 2*7^125 + 7^126 + 7^127 + 2*7^128 + 2*7^129 + 5*7^130 + 6*7^131 + 3*7^132 + 6*7^134 + 3*7^135 + 5*7^136 + 5*7^137 + 2*7^138 + 4*7^139 + 4*7^141 + 3*7^142 + 6*7^143 + 6*7^144 + 3*7^147 + 6*7^148 + 4*7^150 + 4*7^151 + 6*7^152 + 7^153 + 6*7^154 + 6*7^156 + 7^157 + 6*7^158 + 6*7^159 + 2*7^160 + 5*7^161 + 5*7^162 + 3*7^163 + 5*7^164 + 2*7^165 + 2*7^166 + 3*7^167 + 2*7^168 + 2*7^169 + 7^170 + 2*7^171 + 5*7^172 + 5*7^173 + 7^174 + 4*7^175 + 2*7^176 + 5*7^178 + 2*7^179 + 2*7^180 + 2*7^181 + 3*7^182 + 4*7^183 + 6*7^184 + 2*7^185 + 4*7^186 + 6*7^187 + 3*7^188 + 4*7^189 + 5*7^190 + 2*7^191 + 7^192 + 7^193 + 2*7^194 + 5*7^195 + 5*7^196 + 7^197 + 2*7^199 + 5*7^201 + 3*7^202 + 6*7^203 + 2*7^205 + 7^206 + 2*7^208 + 5*7^209 + 6*7^210 + 7^211 + 3*7^212 + 5*7^213 + 7^215 + 5*7^216 + 6*7^217 + 4*7^218 + 3*7^219 + 7^220 + 2*7^221 + 2*7^223 + 5*7^224 + 7^225 + 2*7^226 + 2*7^228 + 3*7^229 + 6*7^230 + 6*7^231 + 4*7^232 + 7^234 + 4*7^235 + 7^236 + 3*7^238 + 4*7^239 + 2*7^240 + 3*7^241 + 5*7^242 + 4*7^243 + 5*7^245 + 7^247 + 5*7^248 + 6*7^249 + 4*7^250 + 4*7^251 + 7^252 + 6*7^253 + 4*7^254 + 3*7^255 + 7^256 + 3*7^257 + 6*7^258 + 2*7^259 + 6*7^260 + 4*7^263 + 3*7^264 + 4*7^265 + 3*7^266 + 2*7^267 + 5*7^268 + 6*7^269 + 6*7^270 + 2*7^271 + 6*7^273 + 7^274 + 5*7^275 + 5*7^276 + 6*7^277 + 4*7^278 + 7^280 + 4*7^282 + 7^283 + 6*7^285 + 2*7^286 + 2*7^287 + 2*7^288 + 6*7^289 + 5*7^290 + 7^291 + 3*7^293 + 7^294 + 2*7^295 + 7^296 + 7^298 + 7^299 + O(7^300)

('129_1', x^3 - x^2 + 2*x - 3, r^2 - r + 1, r, 1, [-1]),

F.<r> = NumberField(x^3 - x^2 + 2*x - 3)
P = F.ideal(r^2 - r + 1)
p = P.norm()
Fp = Qp(p,prec)
phi =  F.hom([F.gen().minpoly().change_ring(Fp).roots()[0][0]])

def all_qords(T,n):
    ans = set([])
    for ordtup in product(range(n),repeat = 3):
        if all([o >= 0 for o in ordtup]) and len([o for o in ordtup if o == 0]) <= 1:
            ans = ans.union(ans,set([ordtup]))
    return sorted(list(ans),key = lambda x: x[0]+x[1]+x[2])

inp_vec = [(a,b,T.transpose(),qords,prec,P.ring(),None,phi) for qords in all_qords(T.transpose().change_ring(ZZ),20)]


for inpt, outt in find_igusa_invariants_from_L_inv(inp_vec):
    if outt != 'Nope':
        try:
            i2,i4,i6,i10 = list(outt)
            # print 'Success with %s (%s, %s, %s)'%(str(inpt[0][3]),i2**5/i10,i2**3*i4/i10,i2**2*i6/i10)
            print 'Success with %s (%s)'%(str(inpt[0][3]),i10)
        except ValueError:
            print outt
    else:
        print 'Finished %s...'%str(inpt[0][3])

for inpt in inp_vec:
    find_igusa_invariants_from_L_inv(*inpt)
